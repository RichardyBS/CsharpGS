-- Sequences
CREATE SEQUENCE SEQ_PREFERENCIA START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_ALERTA START WITH 1 INCREMENT BY 1;

-- Tables
CREATE TABLE PREFERENCIAS_NOTIFICACAO (
    ID_PREFERENCIA NUMBER PRIMARY KEY,
    CIDADE VARCHAR2(100) NOT NULL,
    ESTADO VARCHAR2(2) NOT NULL,
    TEMPERATURA_MIN NUMBER(5,2),
    TEMPERATURA_MAX NUMBER(5,2),
    ATIVO CHAR(1) DEFAULT 'S',
    DATA_CRIACAO TIMESTAMP DEFAULT SYSTIMESTAMP,
    DATA_ATUALIZACAO TIMESTAMP
);

CREATE TABLE ALERTA_TEMPERATURA (
    ID_ALERTA NUMBER PRIMARY KEY,
    ID_PREFERENCIA NUMBER,
    TEMPERATURA NUMBER(5,2) NOT NULL,
    DATA_MEDICAO TIMESTAMP DEFAULT SYSTIMESTAMP,
    STATUS VARCHAR2(20) DEFAULT 'ATIVO',
    FOREIGN KEY (ID_PREFERENCIA) REFERENCES PREFERENCIAS_NOTIFICACAO(ID_PREFERENCIA)
);

-- Procedures
CREATE OR REPLACE PROCEDURE SP_INSERIR_PREFERENCIA (
    p_cidade IN VARCHAR2,
    p_estado IN VARCHAR2,
    p_temp_min IN NUMBER,
    p_temp_max IN NUMBER,
    p_id_out OUT NUMBER
) AS
BEGIN
    INSERT INTO PREFERENCIAS_NOTIFICACAO (
        ID_PREFERENCIA,
        CIDADE,
        ESTADO,
        TEMPERATURA_MIN,
        TEMPERATURA_MAX,
        DATA_CRIACAO,
        DATA_ATUALIZACAO
    ) VALUES (
        SEQ_PREFERENCIA.NEXTVAL,
        p_cidade,
        p_estado,
        p_temp_min,
        p_temp_max,
        SYSTIMESTAMP,
        SYSTIMESTAMP
    ) RETURNING ID_PREFERENCIA INTO p_id_out;
    COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE SP_ATUALIZAR_STATUS_PREF (
    p_id IN NUMBER,
    p_ativo IN CHAR
) AS
BEGIN
    UPDATE PREFERENCIAS_NOTIFICACAO
    SET ATIVO = p_ativo,
        DATA_ATUALIZACAO = SYSTIMESTAMP
    WHERE ID_PREFERENCIA = p_id;
    COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE SP_CRIAR_ALERTA (
    p_id_preferencia IN NUMBER,
    p_temperatura IN NUMBER,
    p_id_out OUT NUMBER
) AS
BEGIN
    INSERT INTO ALERTA_TEMPERATURA (
        ID_ALERTA,
        ID_PREFERENCIA,
        TEMPERATURA,
        DATA_MEDICAO
    ) VALUES (
        SEQ_ALERTA.NEXTVAL,
        p_id_preferencia,
        p_temperatura,
        SYSTIMESTAMP
    ) RETURNING ID_ALERTA INTO p_id_out;
    COMMIT;
END;
/

-- Procedures para consultas
CREATE OR REPLACE PROCEDURE SP_BUSCAR_ALERTAS_ATIVOS (
    p_cidade IN VARCHAR2,
    p_data_inicio IN TIMESTAMP,
    p_cursor OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_cursor FOR
    SELECT a.*, p.CIDADE, p.ESTADO
    FROM ALERTA_TEMPERATURA a
    INNER JOIN PREFERENCIAS_NOTIFICACAO p ON a.ID_PREFERENCIA = p.ID_PREFERENCIA
    WHERE p.CIDADE = p_cidade
    AND a.DATA_MEDICAO >= p_data_inicio
    AND a.STATUS = 'ATIVO'
    ORDER BY a.DATA_MEDICAO DESC;
END;
/

CREATE OR REPLACE PROCEDURE SP_BUSCAR_PREFERENCIAS_ATIVAS (
    p_cursor OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_cursor FOR
    SELECT *
    FROM PREFERENCIAS_NOTIFICACAO
    WHERE ATIVO = 'S'
    ORDER BY DATA_CRIACAO DESC;
END;
/
